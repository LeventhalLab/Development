function [avgWF, upperStd, lowerStd] = avgWF(ts, HPdata,tBefore,tAfter,samplingRate, varargin)
%Function to plot the average waveform of a unit with the peak centered at
%zero. Default color of summer tree green. Default window size of 4 ms.
%
%Inputs: 
%   ts - vector of time stamps
%   SEVfilename - the path for the SEV file of interest
% 
% possible variable inputs: color (in [R/255, B/255, G/255] format), window
% size (in milliseconds)
%
% Outputs:
%   meanWaveforms - vector to plot the waveform later
%   upperStd - the waveform one standard deviation above the mean
%   lowerStd - the waveform one standard deviation below the mean
%   ch - channel number
%   windowSize 



% color = [145/255, 205/255, 114/255];
windowSize = .002; %2 milliseconds

%for iarg = 1: 2 : nargin - 2
%    switch varargin{iarg}
%         case 'color'
%             color = varargin{iarg + 1};
%        case 'windowSize'
%            windowSize = varargin{iarg + 1}/1000;
%    end
%end

%Read in data and filter

samplesBefore = round(timebefore*samplingRate);
samplesAfter  = round(timeafter*samplingRate);

%make sure early signals don't clip
if ts(1)*samplingRate-samplesBefore<0
  ts = ts(find(ts.*samplingRate-samplesBefore>0)) 
end

waveforms = zeros(length(ts), samplesBefore+samplesAfter+1);
for i = 1:length(ts)
    waveforms(i,:) = HPdata(ts(i).*samplingRate-samplesBefore:ts(i).*samplingRate+samplesAfter);
end

twidth = linspace(0,tBefore+tAfter,samplesBefore+samplesAfter+1);
avgWF = mean(waveforms);

upperStd = avgWF + std(avgWF); 
lowerStd = avgWF - std(avgWF);

